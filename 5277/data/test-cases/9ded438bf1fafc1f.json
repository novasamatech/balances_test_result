{"uid":"9ded438bf1fafc1f","name":"test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa8c3605e2f5b4f16369f446caef3de6","time":{"start":1716134468345,"stop":1716134468345,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:165: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2948: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2962: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:359: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f4085578610>\nmethod = 'system_chain', params = [], result_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1716134456409,"stop":1716134457192,"duration":783},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1716134462353,"stop":1716134463200,"duration":847},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1716134468345,"stop":1716134469465,"duration":1120},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:165: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2948: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2962: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:359: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f4085578610>\nmethod = 'system_chain', params = [], result_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","steps":[],"attachments":[{"uid":"4578669079a5cc87","name":"stdout","source":"4578669079a5cc87.txt","type":"text/plain","size":465}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az702-410"},{"name":"thread","value":"2100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a0102c18dadf5cb4","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716134462353,"stop":1716134462353,"duration":0}},{"uid":"377a79593ea5d352","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716134456407,"stop":1716134456407,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":219,"skipped":0,"passed":1134,"unknown":0,"total":1353},"items":[{"uid":"e1a497fbf3944ef5","reportUrl":"https://novasamatech.github.io/test-runner/5276//#testresult/e1a497fbf3944ef5","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716120089982,"stop":1716120089982,"duration":0}},{"uid":"4354191a89bad045","reportUrl":"https://novasamatech.github.io/test-runner/5274//#testresult/4354191a89bad045","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716091275574,"stop":1716091275574,"duration":0}},{"uid":"88e3b9820363f3ec","reportUrl":"https://novasamatech.github.io/test-runner/5275//#testresult/88e3b9820363f3ec","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716105676379,"stop":1716105676379,"duration":0}},{"uid":"2bde3f3d02b9990b","reportUrl":"https://novasamatech.github.io/test-runner/5272//#testresult/2bde3f3d02b9990b","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716062469668,"stop":1716062469668,"duration":0}},{"uid":"2a24ad1e51ec9b28","reportUrl":"https://novasamatech.github.io/test-runner/5273//#testresult/2a24ad1e51ec9b28","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716076911889,"stop":1716076911889,"duration":0}},{"uid":"aa3ab1df83213cae","reportUrl":"https://novasamatech.github.io/test-runner/5271//#testresult/aa3ab1df83213cae","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716048081426,"stop":1716048081426,"duration":0}},{"uid":"1d442169f509acda","reportUrl":"https://novasamatech.github.io/test-runner/5269//#testresult/1d442169f509acda","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716019271705,"stop":1716019271705,"duration":0}},{"uid":"ba70a64a19d0c89b","reportUrl":"https://novasamatech.github.io/test-runner/5270//#testresult/ba70a64a19d0c89b","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716033694014,"stop":1716033694014,"duration":0}},{"uid":"477a423791bba262","reportUrl":"https://novasamatech.github.io/test-runner/5268//#testresult/477a423791bba262","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1716004878833,"stop":1716004878833,"duration":0}},{"uid":"bc01f9928c650244","reportUrl":"https://novasamatech.github.io/test-runner/5267//#testresult/bc01f9928c650244","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715990523373,"stop":1715990523373,"duration":0}},{"uid":"ad04fe9cd3163b37","reportUrl":"https://novasamatech.github.io/test-runner/5266//#testresult/ad04fe9cd3163b37","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715976066959,"stop":1715976066959,"duration":0}},{"uid":"9c693c6d89169d49","reportUrl":"https://novasamatech.github.io/test-runner/5264//#testresult/9c693c6d89169d49","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715947280959,"stop":1715947280959,"duration":0}},{"uid":"24a0844f3c5ee038","reportUrl":"https://novasamatech.github.io/test-runner/5265//#testresult/24a0844f3c5ee038","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715961670896,"stop":1715961670896,"duration":0}},{"uid":"306a2d6afa7b38ec","reportUrl":"https://novasamatech.github.io/test-runner/5263//#testresult/306a2d6afa7b38ec","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715932909686,"stop":1715932909686,"duration":0}},{"uid":"808bb6e886d9280d","reportUrl":"https://novasamatech.github.io/test-runner/5262//#testresult/808bb6e886d9280d","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715918511752,"stop":1715918511752,"duration":0}},{"uid":"fd29ab38339f6aeb","reportUrl":"https://novasamatech.github.io/test-runner/5261//#testresult/fd29ab38339f6aeb","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715904146322,"stop":1715904146322,"duration":0}},{"uid":"c48c274e5e745fe4","reportUrl":"https://novasamatech.github.io/test-runner/5259//#testresult/c48c274e5e745fe4","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715875302722,"stop":1715875302722,"duration":0}},{"uid":"96f51f561d512c30","reportUrl":"https://novasamatech.github.io/test-runner/5260//#testresult/96f51f561d512c30","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715889703591,"stop":1715889703591,"duration":0}},{"uid":"afdbcabfcfcc2f70","reportUrl":"https://novasamatech.github.io/test-runner/5258//#testresult/afdbcabfcfcc2f70","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715860908344,"stop":1715860908344,"duration":0}},{"uid":"9ee81bb51a1639c","reportUrl":"https://novasamatech.github.io/test-runner/5257//#testresult/9ee81bb51a1639c","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715846512462,"stop":1715846512462,"duration":0}}]},"tags":[]},"source":"9ded438bf1fafc1f.json","parameterValues":["{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"]}